---
- name: Install K3s on Linux
  block:
    - name: Download and install K3s
      shell: curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s
      become: yes

    - name: Enable and start K3s service
      systemd:
        name: k3s
        enabled: yes
        state: started
      become: yes

    - name: Create .kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy K3s kubeconfig to user directory
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_env.USER }}"
        mode: '0600'
      become: yes

    - name: Update kubeconfig server address
      replace:
        path: "{{ ansible_env.HOME }}/.kube/config"
        regexp: '127\.0\.0\.1'
        replace: 'localhost'
  when: ansible_os_family == "Debian"

- name: Install K3s on macOS via K3d
  block:
    - name: Install K3d via Homebrew
      homebrew:
        name: k3d
        state: present

    - name: Create K3s cluster with K3d
      command: k3d cluster create local-dev --port "8080:80@loadbalancer" --port "8443:443@loadbalancer"
      args:
        creates: "{{ ansible_env.HOME }}/.kube/config"
      ignore_errors: yes

    - name: Get kubeconfig from K3d
      command: k3d kubeconfig merge local-dev --kubeconfig-switch-context
      changed_when: false
  when: ansible_os_family == "Darwin"

- name: Install kubectl
  block:
    - name: Install kubectl on Linux
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version | default('v1.28.0') }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'
      become: yes
      when: ansible_os_family == "Debian"

    - name: Install kubectl on macOS
      homebrew:
        name: kubectl
        state: present
      when: ansible_os_family == "Darwin"

- name: Install Helm
  block:
    - name: Install Helm on Linux
      shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm
      when: ansible_os_family == "Debian"

    - name: Install Helm on macOS
      homebrew:
        name: helm
        state: present
      when: ansible_os_family == "Darwin"

- name: Verify K3s installation
  command: kubectl cluster-info
  register: cluster_info
  changed_when: false
  ignore_errors: yes

- name: Display cluster info
  debug:
    msg: "{{ cluster_info.stdout_lines }}"
  when: cluster_info.stdout_lines is defined
